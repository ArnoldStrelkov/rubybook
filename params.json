{
  "name": "Rubybook",
  "tagline": "",
  "body": "### Изучаем ROR и JS на интересном проекте\r\nМы будем делать сервис по поиску единомышленников.\r\n![001.jpg](http://s15.postimg.org/77nggxxd7/001.jpg)\r\n Это такой сайт на котором каждый пользователь может разместить свою идею, предложение, проект, а другие пользователи сайта могут к данному проекту присоедениться.\r\n\r\n### Проверка залогинившегося юзера\r\n\r\nПеред выполнением любого метода в контроллерах с помощью вызова `before_action :check_login` мы вызываем метод `check_login`\r\n\r\n```ruby\r\nclass ApplicationController < ActionController::Base\r\n  # Prevent CSRF attacks by raising an exception.\r\n  # For APIs, you may want to use :null_session instead.\r\n  protect_from_forgery with: :exception\r\n  before_action :check_login\r\n  \r\n  private\r\n  \r\n  def check_login\r\n   \r\n    @current_user ||= User.where(id: session[:user_id]).first\r\n    \r\n  end  \r\n  \r\nend\r\n```\r\nМетод `check_login` проверяет есть ли в куках запись сеcсии с номером `id` пользователя и если есть то находит этого юзера и записывает его в переменную `@current_user`. Данная переменная будет доступна в наших контроллерах и вьюхах. \r\n\r\n\r\n### Вывод списка идей\r\n\r\nПо умолчанию у нас стоит роут `root 'main#index'` котрый передает управление методу `index` в контроллере `main`\r\n\r\n```ruby\r\nclass MainController < ApplicationController\r\n  def index\r\n    @ideas = Idea.all.order(id: :desc)\r\n  end\r\nend\r\n```\r\n\r\nДанный метод просто запрашивает все записи из модели `Idea` в переменную `@ideas`. Затем управление передается во выюху `index.html.erb`\r\n\r\n\r\n### Заводим модель `User`\r\nМодель юзера заводим с помошью такой миграции\r\n\r\n```ruby\r\nclass CreateUsers < ActiveRecord::Migration\r\n  def change\r\n    create_table :users do |t|\r\n      t.string :name\r\n      t.string :avatar\r\n      t.string :provider\r\n      t.string :uid\r\n      t.string :token\r\n    end\r\n  end\r\nend\r\n```\r\nВ поля `provider` и `uid` мы будем записывать информацию полученную от социальной сети при авторизации.\r\nНу и затем подрубаем авторизацию. Для этого прописываем в файле Gemfile два гема \r\n\r\n```ruby\r\ngem 'omniauth'\r\ngem 'omniauth-vkontakte'\r\n```\r\nпрогоняем команду bundle install\r\nв папке config\\initializers создаем файл omniauth.rb и прописываем в него следующие строчки\r\n\r\n```ruby\r\nRails.application.config.middleware.use OmniAuth::Builder do\r\n    provider :vkontakte, ENV['VK_KEY'], ENV['VK_SECRET']\r\n  end\r\n```\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}