{
  "name": "Rubybook",
  "tagline": "",
  "body": "### Изучаем ROR и JS на интересном проекте\r\nМы будем делать сервис по поиску единомышленников. Это сайт на котором каждый пользователь может разместить свою идею, предложение, проект, а другие пользователи сайта могут к данному проекту присоедениться.\r\n\r\n### Проверка залогинившегося юзера\r\n\r\nПеред выполнением любого метода в контроллерах с помощью вызова `before_action :check_login` мы вызываем метод `check_login`\r\n\r\n```ruby\r\nclass ApplicationController < ActionController::Base\r\n  # Prevent CSRF attacks by raising an exception.\r\n  # For APIs, you may want to use :null_session instead.\r\n  protect_from_forgery with: :exception\r\n  before_action :check_login\r\n  \r\n  private\r\n  \r\n  def check_login\r\n   \r\n    @current_user ||= User.where(id: session[:user_id]).first\r\n    \r\n  end  \r\n  \r\nend\r\n```\r\nМетод `check_login` проверяет есть ли в куках запись сеcсии с номером `id` пользователя и если есть то находит этого юзера и записывает его в переменную `@current_user`. Данная переменная будет доступна в наших контроллерах и вьюхах. \r\n\r\n\r\n### Вывод списка идей\r\n\r\nПо умолчанию у нас стоит роут `root 'main#index'` котрый передает управление методу `index` в контроллере `main`\r\n\r\n```ruby\r\nclass MainController < ApplicationController\r\n  def index\r\n    @ideas = Idea.all.order(id: :desc)\r\n  end\r\nend\r\n```\r\n\r\nДанный метод просто запрашивает все записи из модели `Idea` в переменную `@ideas`. Затем управление передается во выюху `index.html.erb`\r\n\r\n\r\n### Вьюха index.html.erb\r\n\r\nПервый блок вьюхи это отображение меню\r\n\r\n```ruby\r\n<div class=\"menu\">\r\n    <div class=\"wrapper\"  >\r\n      <div class=\"cf\">\r\n            <div class=\"menu_text\">Поиск единомышленников </div>\r\n            <div class=\"menu_button\">\r\n                <% if @current_user%>\r\n                <%= @current_user.name %>\r\n                 <% else %>\r\n                <a  class=\"a_button\" href='/auth/vkontakte'>Войти через вк</a></div>\r\n            <% end %>\r\n         </div>  \r\n    </div>\r\n</div>   \r\n```\r\n\r\nЗдесь мы проверяем наличие `@current_user` и если он есть то выводим его имя, а если нет, то выводим кнопку входа через вконтакте.\r\n\r\n\r\nЗатем идет блок с кнопкой добавить идею. Данна конпка отображается только если юзер залогинился.\r\nПри нажатии на эту кнопку с помоштю JQuery отображается форма идеи а сама кнопка скрывается\r\n\r\n```erb\r\n<div class=\"add_idea\">\r\n        <div class=\"wrapper\">\r\n            <%if @current_user%>\r\n                <div id=\"add_idea_button\">\r\n                    добавить идею\r\n                </div>\r\n            <%end %>\r\n            <div id=\"add_idea_form\">\r\n                <form action=\"/api/new_idea\" class=\"ajax_form idea-form\" id=\r\n                \"idea-form\" method=\"post\" name=\"idea-form\">\r\n                    <div class=\"form_wrapper\">\r\n                        <label>Заголовок</label> <input class=\"form-control\"\r\n                        name=\"header\" placeholder=\"\" type=\"text\">\r\n                        <label>Текст</label> \r\n                        <textarea class=\"form-control\" name=\"body\" rows=\r\n                        \"10\"></textarea> <input name=\"authenticity_token\" type=\r\n                        \"hidden\" value=\"<%= form_authenticity_token %>\">\r\n                        <label>Видео</label> <input class=\"form-control\" name=\r\n                        \"video\" placeholder=\r\n                        \"например: https://www.youtube.com/watch?v=maX7jD6vGio\"\r\n                        type=\"text\"><br>\r\n                    </div>\r\n                    <div class=\"add_post_button\">\r\n                        Отправить\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div> \r\n```\r\n\r\nВот код JS, ответственный за отображение формы ввода идеи при нажатии на кнопку 'добавить идею'\r\n\r\n```javascript\r\n $('#add_idea_button').on('click', function(){\r\n        $(this).hide(200);\r\n        $('#add_idea_form').show(200);\r\n        \r\n    });\r\n    \r\n    $('#add_post_button').on('click', function(){\r\n        $(\"#idea-form\").submit();\r\n    });\r\n```\r\nОбратите внимание на кнопку `#add_post_button` я не стал использовать тег кнопки `<button>`, вместо этого я стилизовал под кнопку обычный `<div>` и назначил клику на этот div событие - отправку формы. Сделал я это для того чтобы было легче прописывать стили, так как у кнопки уже есть некоторое отображение по умолчанию и его пришлось бы переопределять. \r\n\r\n```ruby\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}