{
  "name": "Rubybook",
  "tagline": "",
  "body": "### Изучаем ROR и JS на интересном проекте\r\n\r\nМы будем делать сервис по поиску единомышленников. Это будет такой сайт  на котором каждый пользователь может разместить свою идею, предложение, проект, а другие пользователи сайта могут к данному проекту присоединиться.\r\n\r\n### Проверка залогинившегося юзера\r\n\r\nПеред выполнением любого метода в контроллерах с помощью вызова `before_action :check_login` мы вызываем метод `check_login`\r\n\r\n```ruby\r\nclass ApplicationController < ActionController::Base\r\n  # Prevent CSRF attacks by raising an exception.\r\n  # For APIs, you may want to use :null_session instead.\r\n  protect_from_forgery with: :exception\r\n  before_action :check_login\r\n  \r\n  private\r\n  \r\n  def check_login\r\n    @current_user ||= User.where(id: session[:user_id]).first\r\n  end  \r\n  \r\nend\r\n```\r\nМетод `check_login` проверяет есть ли в куках запись сеcсии с номером `id` пользователя и если есть то находит этого юзера и записывает его в переменную `@current_user`. Данная переменная будет доступна в наших контроллерах и вьюхах. \r\n\r\n### Вывод списка идей\r\n\r\nПо умолчанию у нас стоит роут `root 'main#index'` который передает управление методу `index` в контроллере `main`\r\n\r\n```ruby\r\nclass MainController < ApplicationController\r\n  def index\r\n    @ideas = Idea.all.order(id: :desc)\r\n  end\r\nend\r\n```\r\n\r\nДанный метод просто запрашивает все записи из модели `Idea` в переменную `@ideas`. Затем управление передается во выюху `index.html.erb`\r\n\r\n\r\n### Вьюха index.html.erb\r\n\r\nПервый блок вьюхи это отображение меню\r\n\r\n```erb\r\n<div class=\"menu\">\r\n    <div class=\"wrapper\"  >\r\n      <div class=\"cf\">\r\n            <div class=\"menu_text\">Поиск единомышленников </div>\r\n            <div class=\"menu_button\">\r\n                <% if @current_user%>\r\n                <%= @current_user.name %>\r\n                 <% else %>\r\n                <a  class=\"a_button\" href='/auth/vkontakte'>Войти через вк</a></div>\r\n            <% end %>\r\n         </div>  \r\n    </div>\r\n</div>   \r\n```\r\n\r\nЗдесь мы проверяем наличие `@current_user` и если он есть то выводим его имя, а если нет, то выводим кнопку входа через вконтакте.\r\n\r\n\r\nЗатем идет блок с кнопкой добавить идею. Данная кнопка отображается только если юзер залогинился.\r\nПри нажатии на эту кнопку с помощью JQuery отображается форма добавления новой идеи, а сама кнопка скрывается\r\n\r\n```erb\r\n<div class=\"add_idea\">\r\n    <div class=\"wrapper\">\r\n        <%if @current_user%>\r\n\t\t\t<div id=\"add_idea_button\">добавить идею</div>\r\n\t\t<%end %>\r\n        <div id=\"add_idea_form\">\r\n            <form action=\"/api/new_idea\" class=\"\" id=\"idea-form\" method=\"post\"\r\n            name=\"idea-form\">\r\n                <div class=\"form_wrapper\">\r\n                    <label>Заголовок</label>\r\n                    <input class=\"form-control\" name=\"header\" placeholder=\"\" type=\"text\">\r\n                    <label>Текст</label> \r\n                    <textarea class=\"form-control\" name=\"body\" rows=\"10\"></textarea>\r\n                    <input name= \"authenticity_token\" type=\"hidden\" \r\n                    value=\"<%= form_authenticity_token %>\">\r\n                    <label>Видео</label> \r\n                    <input class=\"form-control\" name=\"video\" placeholder=\r\n                    \"например: https://www.youtube.com/watch?v=maX7jD6vGio\" type=\"text\">\r\n                </div>\r\n                <div id=\"add_post_button\">\r\n                    Отправить\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>   \r\n```\r\n\r\nВот код JS, ответственный за отображение формы ввода идеи при нажатии на кнопку 'добавить идею'\r\n\r\n```javascript\r\n $('#add_idea_button').on('click', function(){\r\n        $(this).hide(200);\r\n        $('#add_idea_form').show(200);\r\n        \r\n});\r\n```\r\nДанный код отправляет форму \r\n\r\n```javascript\r\n$('#add_post_button').on('click', function(){\r\n\t$(\"#idea-form\").submit();\r\n});\r\n```\r\nЯ не стал использовать тег кнопки `<button>`, вместо этого я стилизовал под кнопку обычный `<div>` с `id=#add_post_button` и назначил клику на этот div событие - отправку формы. Сделал я это для того чтобы было легче прописывать стили, так как у кнопки уже есть некоторое отображение по умолчанию и его пришлось бы переопределять. \r\n\r\nНу и наконец, последняя часть кода, которая выводит список идей из переменной `@ideas`\r\n\r\n```erb\r\n<div class=\"idea\">\r\n    <div class=\"wrapper\">\r\n        <% for idea in @ideas %>\r\n        <div class=\"one_idea\">\r\n            <h2><%= idea.header%></h2>\r\n                <%if !idea.video.to_s.empty? %>\r\n                <div class=\"youtube\" id=\"<%= idea.video.split('?v=')[1] %>\">\r\n                    <%= image_tag \"yt.png\", class: \"yt\" %>\r\n                </div>\r\n                <% end %>\r\n                \r\n            <p><%= idea.body %></p>\r\n            \r\n            <div class=\"join_status cf\">\r\n                <div class=\"joined\">\r\n                    <% count = FollowIdea.where(idea_id: idea).count %>\r\n                    <% unless count == 0 %>\r\n                        <a class=\"a_joined\" href=\"\">присоединилось:\r\n                    <%= count %></a> \r\n                    <% end %>\r\n                </div>\r\n                <div class=\"join\">\r\n                    <% if FollowIdea.where(user_id: @current_user, idea_id: idea).empty? %>\r\n                        <% if  @current_user%>\r\n                            <a class=\"a_join\" href='/susc/<%= idea.id %>'>присоединиться</a> \r\n                        <% else %>\r\n                            <a class=\"a_join\" href='/auth/vkontakte'>присоединиться</a>\r\n                        <% end %>\r\n                        \r\n                    <% else %> \r\n                        вы присоединились\r\n                    <% end %>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"sususers\">\r\n                <% idea.users.each.with_index do |user, index| %> \r\n                <a class=\"\" href=\"https://vk.com/id<%=user.uid%>\"><%= user.name%></a><span>, </span>\r\n                <% end %>\r\n            </div>\r\n        </div>\r\n        <% end %>\r\n    </div>\r\n</div>\r\n```\r\n\r\nДавайте разберем этот код по кусочкам. Вот это цикл `for in` с помощью которого мы перебираем все идеи которые находятся в переменной `@ideas`\r\n\r\n```erb\r\n<div class=\"idea\">\r\n    <div class=\"wrapper\">\r\n        <% for idea in @ideas %>\r\n        <div class=\"one_idea\">\r\n\t\t\r\n\t\t\t...\r\n\t\t\r\n\t\t</div>\r\n        <% end %>\r\n    </div>\r\n</div>\r\n```\r\nвыводим заголовок идеи\r\n\r\n```erb\r\n<h2><%= idea.header%></h2>\r\n```\r\nЕсли к идеи было прикреплено видео, то выводим это видео\r\n\r\n```erb\r\n<%if !idea.video.to_s.empty? %>\r\n     <div class=\"youtube\" id=\"<%= idea.video.split('?v=')[1] %>\">\r\n         <%= image_tag \"yt.png\", class: \"yt\" %>\r\n     </div>\r\n<% end %>\r\n```\r\nэта строчка просто выводит иконку ютуб по центру видео\r\n\r\n```erb\r\n\t<%= image_tag \"yt.png\", class: \"yt\" %>\r\n```\r\n\r\nА вот здесь здесь мы прописываем в id дива адрес видео с ютуба. \r\n\r\n```erb\r\n<div class=\"youtube\" id=\"<%= idea.video.split('?v=')[1] %>\">\r\n```\r\n\r\nДальнейшая обработка данного дива проходит с помощью вот такого кода JS, который вешает обработчик клика на каждый `div` с классом `youtube`\r\n\r\n```javascript\r\n$(\".youtube\").each(function() {\r\n\r\n// определение миниатюры\r\n$(this).css('background-image', 'url(http://i.ytimg.com/vi/' + this.id + '/sddefault.jpg)');\r\n\r\n$(document).on('click', '#' + this.id, function() {\r\n\r\n\t// формируем ссылку со включенной опцией autoplay\r\n\tvar iframe_url = \"https://www.youtube.com/embed/\" + this.id + \"?autoplay=1&autohide=1&rel=0\";\r\n\t\r\n\t// Формируем элемент iframe\r\n\tvar iframe = $('<iframe/>', {'frameborder': '0', 'src': iframe_url});\r\n\r\n\t// Замена миниатюры плеером\r\n\t$(this).replaceWith(iframe);\r\n\t});\r\n});\r\n```\r\nВозвращаемся к нашей вьюхе. Выводим текст идеи\r\n\r\n```erb\r\n<p><%= idea.body %></p>\r\n```\r\n\r\nВыводим число присоединившихся и кнопку \"присоединиться\"\r\n\r\n```erb            \r\n<div class=\"join_status cf\">\r\n\t<div class=\"joined\">\r\n\t\t<% count = FollowIdea.where(idea_id: idea).count %>\r\n\t\t<% unless count == 0 %>\r\n\t\t\t<a class=\"a_joined\" href=\"\">присоединилось:\r\n\t\t<%= count %></a> \r\n\t\t<% end %>\r\n\t</div>\r\n\t<div class=\"join\">\r\n\t\t<% if FollowIdea.where(user_id: @current_user, idea_id: idea).empty? %>\r\n\t\t\t<% if  @current_user%>\r\n\t\t\t\t<a class=\"a_join\" href='/susc/<%= idea.id %>'>присоединиться</a> \r\n\t\t\t<% else %>\r\n\t\t\t\t<a class=\"a_join\" href='/auth/vkontakte'>присоединиться</a>\r\n\t\t\t<% end %>\r\n\t\t\t\r\n\t\t<% else %> \r\n\t\t\tвы присоединились\r\n\t\t<% end %>\r\n\t</div>\r\n</div>\r\n```\r\n\r\nВыводим перечень присоединившихся\r\n\r\n```erb \r\n<div class=\"sususers\">\r\n\t\t<% idea.users.each.with_index do |user, index| %> \r\n\t\t<a class=\"\" href=\"https://vk.com/id<%=user.uid%>\"><%= user.name%></a><span>, </span>\r\n\t\t<% end %>\r\n</div>\r\n```\r\n\r\nПо умолчанию перечень присоединившисхся находится в див со свойством `display:none;` и не отображается. Показ данного дива включается при клике на ссылку с классом `a_joined` с помощью такого скрипта\r\n\r\n\r\n```javascript\r\n$('.a_joined').on('click', function(e) {\r\n\te.preventDefault();\r\n\t$(this).parent().parent().parent().find('.sususers').show(200);\r\n\r\n});\r\n```\r\n### Контроллер `api_controller.rb` \r\n\r\nМетод  `new_idea` записывает в базу данных новую идею. Данный метод вызывается при отправке формы так как у нас в роутах прописано `post 'api/new_idea'`\r\n\r\n```ruby\r\ndef new_idea\r\n   @idea = Idea.create(header: params[:header], body: params[:body], video: params[:video], user_id: @current_user.id)\r\n   redirect_to root_url\r\nend\r\n```\r\nМетод `susc` осуществляет подписку пользователя на идею и вызывается при клике на конопку подписаться, соответствюущий роут - `get '/susc/:id', to: 'api#susc'`\r\n\r\n```ruby\r\ndef susc\r\n    i = Idea.find(params[:id])\r\n    @current_user.follow_ideas.create(idea: i)\r\n    redirect_to root_url\r\n  end  \r\n```\r\n\r\nМетод `set_session` вызывается гемом авторизации `omniauth` после того как данный гем получит ответ от вконтакте, соответствюущий роут - `get '/auth/:provider/callback', to: 'api#set_session'`\r\n\r\n\r\n```ruby\r\ndef set_session\r\n      \r\n    req = request.env['omniauth.auth']\r\n    user = User.where(provider: req.provider, uid: req.uid).first \r\n    \r\n    unless user\r\n      user =  User.create(name: req.info.name, provider: req.provider, uid: req.uid)\r\n    end\r\n    \r\n    session[:user_id] = user.id\r\n    redirect_to root_url\r\nend \r\n\r\n```\r\nЧтобы разлогиниться мы прописывем в сессию вместо `id` юзера `nil`\r\n\r\n```ruby\r\ndef exit\r\n session[:user_id] = nil\r\n redirect_to root_url\r\nend \r\n```\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}